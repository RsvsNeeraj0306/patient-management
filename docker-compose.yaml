services:
  postgres:
    container_name: patient-db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: patient
    ports:
      - "5002:5432"
    volumes:
      - C:\Users\pc\db_volumes\patient-service-db:/var/lib/postgresql/data
    networks:
      - patient-network

  auth-service-db:
    container_name: auth-service-db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - "5001:5432"
    volumes:
      - C:\Users\pc\db_volumes\auth-service-db:/var/lib/postgresql/data
    networks:
      - patient-network

  billing-service:
    container_name: billing-service
    image: billing-service:latest
    build:
      context: billing-service
      dockerfile: Dockerfile
    environment:
      - SPRING_APPLICATION_NAME=billing-service
      - GRPC_SERVER_PORT=9091
      - SERVER_PORT=5000
    ports:
      - "5000:5000"
      - "9091:9091"
    networks:
      - patient-network

  patient-service:
    container_name: patient-service
    image: patient-service-backend:latest
    build:
      context: patient-service
      dockerfile: Dockerfile
    environment:
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/patient
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_SQL_INIT_MODE=always
      - BILLING_SERVICE_ADDRESS=billing-service
      - BILLING_SERVICE_PORT=9091
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

#    ports:
#      - "4000:4000"
    depends_on:
      - postgres
      - billing-service
    networks:
      - patient-network

  analytics-service:
    container_name: analytics-service
    image: analytics-service:latest
    build:
      context: analytics-service
      dockerfile: Dockerfile
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "4002:4002"
    networks:
      - patient-network

  api-gateway:
    container_name: api-gateway
    image: api-gateway:latest
    build:
      context: api-gateway
      dockerfile: Dockerfile
    ports:
      - "4004:4004"
    networks:
      - patient-network

  auth-service:
    container_name: auth-service
    image: auth-service:latest
    build:
      context: auth-service
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-service-db:5432/db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
      - JWT_SECRET=6c17414c1321b2975979f9f2feab367d2deca2f8d54fe94d323cb8b9c2f454c4
    ports:
          - "4005:4005"
    depends_on:
      - auth-service-db
    networks:
      - patient-network

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: unless-stopped
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CLUSTER_ID: my-kafka-cluster
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - patient-network
networks:
  patient-network:
    driver: bridge
